well be working wiith  db library , using file demo code in sql 

SQL (structured query language )
is a human -readable language for realtional database 

Strings in SQL :
 sql is case sensitive 'Bob' is not the same as 'bob'
 single-quotes, not double , around strings

Commands 
 end wit a semicolon  ;

SQL keywords are conventonally written in ALL CAPS but not required  
SELECT price FROM books  -same as- select price from books  



What is CRUD: 

letter     verb         Sql commands
-------------------------------------------
  C       Create          INSERT INTO 
-------------------------------------------
  R       Read            SELECT ... FROM 
-------------------------------------------
  U       Update          UPDATE ...SET 
-------------------------------------------
  D       Delete          DELETE FROM 



--------------------------------------
SELECT and FROM 

SELECT is the most flexible and powerful command in SQL 
it selects rows (including summary data, roll-up data ,etc )from tables(s)


SELECT statements have subclauses , wich are performed in this order :

#      Clause    Purpose                                          required? 
1     FROM       Select and join together tables where data is     no
--------------------------------------------------------------------------------
2     WHERE      Decide wich rows to use                   no                   
--------------------------------------------------------------------------------
3     GROUP BY   Place rows into groups                    no 
--------------------------------------------------------------------------------
4     SELECT     Determine value of result                      yes
--------------------------------------------------------------------------------
5     HAVING     Determine wich grouped result to keep     no 
--------------------------------------------------------------------------------
6     ORDER BY   Sort output data                           no
--------------------------------------------------------------------------------
7     LIMIT      Limit output to n rows                     no
--------------------------------------------------------------------------------
8     OFFSET     Skip n rows at start of  output                no


-----------------------------------------------------------------------------

SELECT * FROM name_db 





---------------------------------------------
Determine wich table to use to get data 
opens all info from the db table 

SELECT * FROM table_name_db; 

---------------------------------------------

this gives me only all titles from db choosed  

SELECT titles FROM table_name; 

---------------------------------------------

this give me titles and author

SELECT titles, author FROM table_name;

---------------------------------------------

WHERE (filter wich rows get included )
In this case only books with price over $10 ()

SELECT * FROM books WHERE price > 10;

<> or !=  is not equal 


-----------------------------
selects the titles and the page_count that are less than 800 and bigger than 700 

SELECT title , page_count FROM books WHERE page_count >= 700 AND page_count <=800;

----------------------------------------------------------
SELECT author ,title FROM books WHERE author IN ('Ari Berman', 'Trevor Noah');

-------------------------------------------------------------------------

GROUP BY 
reduce  the amount of rows returned by grouping rows together
it added them in a single row 
   
   group by author ,show name and books 

   SELECT author ,COUNT(*) FROM books GROUP BY author;


HAVING 
decide wich groups(s) if grouped , to keep 
  
  only  show groups with more than 2 books 

SELECT author ,COUNT(*) FROM books GROUP BY author HAVING COUNT(*) >2 


select author and the avg bigger tha 500 

SELECT author ,AVG(page_count) FROM books GROUP BY author HAVING AVG(page_count) > 500 ;



-=--=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=--=

ORDER BY  

ordena alpabeticamente 
con desc al final lo   hace de z-a 
tambien lo hace con numeros 

Arrrange output in order (sort)
order results by author name (a -z )

SELECT title, author ,price FROM books ORDER BY author ;
---
Arange output in order (sort) descending 
order results by author name (z-a  )

SELECT title, author ,price FROM books ORDER BY author desc;
---------------
this order by author and also orders the titles 

SELECT author, title FROM books ORDER BY author,title ;

---------
LIMIT 

this limits to only 5 author 

SELECT author FROM books GROUP BY author LIMIT 5;
---------

OFFSET
Skip n number of rows. Used in combination wt LIMIT to paginate results  
skip the 5 first authors and gos from 6 to 10 

SELECT author FROM books LIMIT 5 OFFSET 5; 


If we want to retrieve some information and put a name to that info we use alises AS 

SELECT AVG(page_count) as avg_pages,AVG(price) AS avg_prices FROM books GROUP BY author ;